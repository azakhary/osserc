// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.fictionalrealm.osserc.protocol.datatypes;

public enum ServerStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  ONLINE(0, 0),
  OFFLINE(1, 1),
  AUTH_SERVER_OFFLINE(2, 2),
  MAINTENANCE(3, 3),
  MAP_SERVER_OFFLINE(4, 4),
  ;
  
  public static final int ONLINE_VALUE = 0;
  public static final int OFFLINE_VALUE = 1;
  public static final int AUTH_SERVER_OFFLINE_VALUE = 2;
  public static final int MAINTENANCE_VALUE = 3;
  public static final int MAP_SERVER_OFFLINE_VALUE = 4;
  
  
  public final int getNumber() { return value; }
  
  public static ServerStatus valueOf(int value) {
    switch (value) {
      case 0: return ONLINE;
      case 1: return OFFLINE;
      case 2: return AUTH_SERVER_OFFLINE;
      case 3: return MAINTENANCE;
      case 4: return MAP_SERVER_OFFLINE;
      default: return null;
    }
  }
  
  public static com.google.protobuf.Internal.EnumLiteMap<ServerStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static com.google.protobuf.Internal.EnumLiteMap<ServerStatus>
      internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<ServerStatus>() {
          public ServerStatus findValueByNumber(int number) {
            return ServerStatus.valueOf(number);
          }
        };
  
  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(index);
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.fictionalrealm.osserc.protocol.datatypes.DataTypes.getDescriptor().getEnumTypes().get(0);
  }
  
  private static final ServerStatus[] VALUES = {
    ONLINE, OFFLINE, AUTH_SERVER_OFFLINE, MAINTENANCE, MAP_SERVER_OFFLINE, 
  };
  
  public static ServerStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }
  
  private final int index;
  private final int value;
  
  private ServerStatus(int index, int value) {
    this.index = index;
    this.value = value;
  }
  
  // @@protoc_insertion_point(enum_scope:osserc.dt.ServerStatus)
}

